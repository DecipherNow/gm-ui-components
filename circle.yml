# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

# Set defaults for all jobs
defaults: &defaults
  working_directory: ~/repo
  environment:
    CC_TEST_REPORTER_ID: c54354c67485869b121e5dcdb231ceefcbe890a99864521430f328118fb9fa4d
  docker:
    - image: circleci/node:carbon

version: 2
jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Update npm to 5.7.1 to get npm ci
          command: sudo npm install npm@5.7.1 -g
      - run:
          name: Install dependencies
          command: npm ci
      - restore_cache:
          keys:
            - v2-cc-reporter-
      - run:
          name: Install Code Climate Test Reporter
          command: |
            if [ ! -f cc-test-reporter ]; then curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && chmod +x ./cc-test-reporter; fi
      - save_cache:
          paths:
            - cc-test-reporter
          key: v2-cc-reporter-
      - persist_to_workspace: 
          root: ~/repo
          paths:
            - node_modules
            - cc-test-reporter

  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      # Generate a build
      - run:
          name: Build the application
          command: |
            npm run build
      - run:
          name: Compress the build directory into a tarball
          command: |
            tar -czf lib.tar.gz lib
      # Store Assets generated by npm build
      - store_artifacts:
          path: lib.tar.gz
  
  # run tests!
  test:
    <<: *defaults
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      # CircleCI 2.0 no longer allows interpolation of env variables. This is the workaround: 
      # https://discuss.circleci.com/t/using-environment-variables-in-config-yml-not-working/14237
      - run: 
          command: mkdir results
      - run:
          name: Set JEST_JUNIT_OUTPUT
          command: echo 'export JEST_JUNIT_OUTPUT="results/junit-$CIRCLE_NODE_INDEX.xml"' >> $BASH_ENV
      - run:
          name: Prepare Code Climate Test Reporter
          command: ./cc-test-reporter before-build
      - run:
          name: Run tests
          # split tests by timing and then run npm test
          command: |
            circleci tests glob "src/**/*.test.js" | circleci tests split --split-by=timings | \
            xargs npm test -- --testResultsProcessor="jest-junit" --coverage --ci --maxWorkers=2
      - run: 
          name: Format coverage
          command: ./cc-test-reporter format-coverage -t lcov --output coverage/codeclimate.$CIRCLE_NODE_INDEX.json coverage/lcov.info
      - persist_to_workspace: 
          root: ~/repo
          paths:
            - results
            - coverage
            - cc-test-reporter
            
  coverage:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Send Istanbul LCOV Results to Code Climate
          command: |
            ./cc-test-reporter sum-coverage coverage/codeclimate.*.json
            ./cc-test-reporter upload-coverage
      - run: 
          name: Merge junit results
          command: mkdir junit && npm run junit-merge -- -d results -o junit/junit.xml
      # Store Assets generated by npm test
      - store_artifacts:
          path: junit
      - store_test_results:
          path: junit
      # Uploading all of the LCOV assets is time consuming, and we get this info
      # in CircleCI. However, I'm leaving this here to uncomment if needed.
      # - store_artifacts:
      #     path: coverage

# Define a workflow to specify the run order of jobs
# More info at https://circleci.com/docs/2.0/workflows/
workflows:
  version: 2
  build_and_test:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - build:
          requires: 
            - setup
      - coverage:
          requires:
            - test
            - build